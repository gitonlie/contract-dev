{
    "contractName": "MyToken1",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"e:/workspace/chain-block-task/contract-dev/meme/contracts/MyToken.sol\":\"MyToken1\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"e:/workspace/chain-block-task/contract-dev/meme/contracts/MyToken.sol\":{\"keccak256\":\"0x12f412d332394cc097f63db3c892a3c4deb482e016ae4d97fc1833ecd1555a1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328629798d2b3678428435f68843cbec88fb3698b6f8ab6a1420a455d6aacb37\",\"dweb:/ipfs/QmQuEXXHcRS7dgtDE9BAqEKfcWBVVjAJa5yenp6cJKUhib\"]},\"e:/workspace/chain-block-task/contract-dev/meme/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"e:/workspace/chain-block-task/contract-dev/meme/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"e:/workspace/chain-block-task/contract-dev/meme/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"e:/workspace/chain-block-task/contract-dev/meme/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"e:/workspace/chain-block-task/contract-dev/meme/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
    "bytecode": "6080604052346103ab57604080519081016001600160401b038111828210176102be576040908152600882526721282faa27a5a2a760c11b602083015280519081016001600160401b038111828210176102be576040526004815263109414d160e21b602082015281516001600160401b0381116102be57600354600181811c911680156103a1575b60208210146102a057601f811161033e575b50602092601f82116001146102dd57928192935f926102d2575b50508160011b915f199060031b1c1916176003555b80516001600160401b0381116102be57600454600181811c911680156102b4575b60208210146102a057601f811161023d575b50602091601f82116001146101dd579181925f926101d2575b50508160011b915f199060031b1c1916176004555b33156101bf5760025469021e0c0013070adc000081018091116101ab57600255335f525f60205260405f2069021e0c0013070adc0000815401905560405169021e0c0013070adc000081525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a360405161064b90816103b08239f35b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b015190505f80610115565b601f1982169260045f52805f20915f5b8581106102255750836001951061020d575b505050811b0160045561012a565b01515f1960f88460031b161c191690555f80806101ff565b919260206001819286850151815501940192016101ed565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610296575b601f0160051c01905b81811061028b57506100fc565b5f815560010161027e565b9091508190610275565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100ea565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100b4565b601f1982169360035f52805f20915f5b868110610326575083600195961061030e575b505050811b016003556100c9565b01515f1960f88460031b161c191690555f8080610300565b919260206001819286850151815501940192016102ed565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610397575b601f0160051c01905b81811061038c575061009a565b5f815560010161037f565b9091508190610376565b90607f1690610088565b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde031461043357508063095ea7b3146103b157806318160ddd1461039457806323b872dd146102aa578063313ce5671461028f57806370a082311461025857806395d89b411461013d578063a9059cbb146100d35763dd62ed3e1461007f575f80fd5b346100cf5760403660031901126100cf5761009861052c565b6100a0610542565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b346100cf5760403660031901126100cf577f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de2604061010f61052c565b60243561011d818333610558565b82516001600160a01b0390921682526020820152a1602060405160018152f35b346100cf575f3660031901126100cf576040515f6004548060011c9060018116801561024e575b60208310811461023a5782855290811561021e57506001146101c9575b50819003601f01601f191681019067ffffffffffffffff8211818310176101b5576101b182918260405282610502565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b82821061020857506020915082010182610181565b60018160209254838588010152019101906101f3565b90506020925060ff191682840152151560051b82010182610181565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610164565b346100cf5760203660031901126100cf576001600160a01b0361027961052c565b165f525f602052602060405f2054604051908152f35b346100cf575f3660031901126100cf57602060405160128152f35b346100cf5760603660031901126100cf576102c361052c565b6102cb610542565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f198110610314575b506103099350610558565b602060405160018152f35b83811061037957841561036657331561035357610309945f52600160205260405f2060018060a01b0333165f526020528360405f2091039055846102fe565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100cf575f3660031901126100cf576020600254604051908152f35b346100cf5760403660031901126100cf576103ca61052c565b602435903315610366576001600160a01b031690811561035357335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100cf575f3660031901126100cf575f6003548060011c906001811680156104f8575b60208310811461023a5782855290811561021e57506001146104a35750819003601f01601f191681019067ffffffffffffffff8211818310176101b5576101b182918260405282610502565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b8282106104e257506020915082010182610181565b60018160209254838588010152019101906104cd565b91607f1691610457565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100cf57565b602435906001600160a01b03821682036100cf57565b6001600160a01b0316908115610602576001600160a01b03169182156105ef57815f525f60205260405f20548181106105d657817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b63ec442f0560e01b5f525f60045260245ffd5b634b637e8f60e11b5f525f60045260245ffdfea2646970667358221220fc4c9dca44b139f28f350a78a999d88a2d2e59b3009da6000b253076b910c3cf64736f6c634300081e0033",
    "deployedBytecode": "6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde031461043357508063095ea7b3146103b157806318160ddd1461039457806323b872dd146102aa578063313ce5671461028f57806370a082311461025857806395d89b411461013d578063a9059cbb146100d35763dd62ed3e1461007f575f80fd5b346100cf5760403660031901126100cf5761009861052c565b6100a0610542565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b346100cf5760403660031901126100cf577f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de2604061010f61052c565b60243561011d818333610558565b82516001600160a01b0390921682526020820152a1602060405160018152f35b346100cf575f3660031901126100cf576040515f6004548060011c9060018116801561024e575b60208310811461023a5782855290811561021e57506001146101c9575b50819003601f01601f191681019067ffffffffffffffff8211818310176101b5576101b182918260405282610502565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b82821061020857506020915082010182610181565b60018160209254838588010152019101906101f3565b90506020925060ff191682840152151560051b82010182610181565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610164565b346100cf5760203660031901126100cf576001600160a01b0361027961052c565b165f525f602052602060405f2054604051908152f35b346100cf575f3660031901126100cf57602060405160128152f35b346100cf5760603660031901126100cf576102c361052c565b6102cb610542565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f198110610314575b506103099350610558565b602060405160018152f35b83811061037957841561036657331561035357610309945f52600160205260405f2060018060a01b0333165f526020528360405f2091039055846102fe565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100cf575f3660031901126100cf576020600254604051908152f35b346100cf5760403660031901126100cf576103ca61052c565b602435903315610366576001600160a01b031690811561035357335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100cf575f3660031901126100cf575f6003548060011c906001811680156104f8575b60208310811461023a5782855290811561021e57506001146104a35750819003601f01601f191681019067ffffffffffffffff8211818310176101b5576101b182918260405282610502565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b8282106104e257506020915082010182610181565b60018160209254838588010152019101906104cd565b91607f1691610457565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100cf57565b602435906001600160a01b03821682036100cf57565b6001600160a01b0316908115610602576001600160a01b03169182156105ef57815f525f60205260405f20548181106105d657817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b63ec442f0560e01b5f525f60045260245ffd5b634b637e8f60e11b5f525f60045260245ffdfea2646970667358221220fc4c9dca44b139f28f350a78a999d88a2d2e59b3009da6000b253076b910c3cf64736f6c634300081e0033",
    "sourceMap": "238:360:0:-:0;;;;;;;;;;;;-1:-1:-1;;;;;238:360:0;;;;;;;;;;;;;;;-1:-1:-1;;;238:360:0;;;;;;;;;-1:-1:-1;;;;;238:360:0;;;;;;;;;;;;;-1:-1:-1;;;238:360:0;;;;;;-1:-1:-1;;;;;238:360:0;;;;1648:13:2;238:360:0;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;;;;;;1648:13:2;238:360:0;;;;;1648:13:2;238:360:0;;;;-1:-1:-1;;;;;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;;;;;;1648:13:2;238:360:0;;;;;;;;370:10;7432:21:2;7428:91;;6137:21;238:360:0;382:10;238:360;;;;;;;6137:21:2;238:360:0;370:10;-1:-1:-1;238:360:0;-1:-1:-1;238:360:0;;;-1:-1:-1;238:360:0;382:10;238:360;;;;;;;382:10;238:360;;-1:-1:-1;6987:25:2;238:360:0;370:10;6987:25:2;;238:360:0;;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;-1:-1:-1;238:360:0;7428:91:2;7476:32;;;-1:-1:-1;7476:32:2;-1:-1:-1;238:360:0;;;-1:-1:-1;7476:32:2;238:360:0;;;;-1:-1:-1;238:360:0;;;;;;;;;;;-1:-1:-1;238:360:0;;-1:-1:-1;238:360:0;;-1:-1:-1;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;-1:-1:-1;238:360:0;;;;;-1:-1:-1;238:360:0;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;-1:-1:-1;238:360:0;;;;;-1:-1:-1;238:360:0;;;;;;;;;;1648:13:2;-1:-1:-1;238:360:0;;-1:-1:-1;238:360:0;;-1:-1:-1;238:360:0;;;;;;;;;;;;;;;;;;;;;1648:13:2;238:360:0;;;;;;;;;;1648:13:2;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;-1:-1:-1;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;;-1:-1:-1;238:360:0;;;;;;;;;;;;;;",
    "deployedSourceMap": "238:360:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;238:360:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;238:360:0;;;;545:19;238:360;;;:::i;:::-;;;3388:5:2;735:10:5;;;3388:5:2;:::i;:::-;238:360:0;;-1:-1:-1;;;;;238:360:0;;;;;;;;;545:19;238:360;;;;;;;;;;;;;-1:-1:-1;;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;-1:-1:-1;;238:360:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;238:360:0;;;;-1:-1:-1;;;;;238:360:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;238:360:0;;;;;;;2761:2:2;238:360:0;;;;;;;;;-1:-1:-1;;238:360:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;238:360:0;;;;;;;;;;;;;;;735:10:5;238:360:0;;;;;;;;;;;;;;-1:-1:-1;;10484:36:2;;10480:309;;238:360:0;4890:5:2;;;;;:::i;:::-;238:360:0;;;;;;;10480:309:2;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:5;9815:21:2;9811:90;;4890:5;238:360:0;;;;;;;;;;;;;;735:10:5;238:360:0;-1:-1:-1;238:360:0;;;;;-1:-1:-1;238:360:0;;;;;10480:309:2;;;9811:90;9859:31;;;238:360:0;9859:31:2;238:360:0;;;;;9859:31:2;9713:89;9759:32;;;238:360:0;9759:32:2;238:360:0;;;;;9759:32:2;10536:130;10591:60;;;;;238:360:0;10591:60:2;735:10:5;238:360:0;;;;;;;;10591:60:2;238:360:0;;;;;;-1:-1:-1;;238:360:0;;;;;2881:12:2;238:360:0;;;;;;;;;;;;;-1:-1:-1;;238:360:0;;;;;;:::i;:::-;;;735:10:5;;9717:19:2;9713:89;;-1:-1:-1;;;;;238:360:0;;9815:21:2;;9811:90;;735:10:5;238:360:0;;;;;;;;;-1:-1:-1;238:360:0;;;;;-1:-1:-1;238:360:0;;;;;;;9989:31:2;238:360:0;735:10:5;9989:31:2;;238:360:0;;;;;;;;;;;;;-1:-1:-1;;238:360:0;;;;;1837:5:2;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;238:360:0;;;;;-1:-1:-1;;238:360:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:2;238:360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;238:360:0;;;;:::o;:::-;;;;-1:-1:-1;;;;;238:360:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;238:360:0;;;;;;:::o;5297:300:2:-;-1:-1:-1;;;;;238:360:0;;5380:18:2;;5376:86;;-1:-1:-1;;;;;238:360:0;;5475:16:2;;5471:86;;238:360:0;5396:1:2;238:360:0;5396:1:2;238:360:0;;;5396:1:2;238:360:0;;6244:19:2;;;6240:115;;238:360:0;6987:25:2;238:360:0;;;;5396:1:2;238:360:0;5396:1:2;238:360:0;;;;5396:1:2;238:360:0;;;5396:1:2;238:360:0;5396:1:2;238:360:0;;;5396:1:2;238:360:0;;;;;;;;;;;;6987:25:2;5297:300::o;6240:115::-;6290:50;;;;5396:1;6290:50;;238:360:0;;;;;;5396:1:2;6290:50;5471:86;5514:32;;;5396:1;5514:32;5396:1;5514:32;238:360:0;;5396:1:2;5514:32;5376:86;5421:30;;;5396:1;5421:30;5396:1;5421:30;238:360:0;;5396:1:2;5421:30",
    "sourcePath": "e:/workspace/chain-block-task/contract-dev/meme/contracts/MyToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.30+commit.73712a01"
    },
    "ast": {
        "absolutePath": "e:/workspace/chain-block-task/contract-dev/meme/contracts/MyToken.sol",
        "exportedSymbols": {
            "ERC20": [
                703
            ],
            "MyToken1": [
                51
            ]
        },
        "id": 52,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:21:0"
            },
            {
                "absolutePath": "e:/workspace/chain-block-task/contract-dev/meme/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "e:/workspace/chain-block-task/contract-dev/meme/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 52,
                "sourceUnit": 704,
                "src": "58:129:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "66:5:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4,
                            "name": "ERC20",
                            "nameLocations": [
                                "259:5:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 703,
                            "src": "259:5:0"
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "259:5:0"
                    }
                ],
                "canonicalName": "MyToken1",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 51,
                "linearizedBaseContracts": [
                    51,
                    703,
                    93,
                    807,
                    781,
                    837
                ],
                "name": "MyToken1",
                "nameLocation": "247:8:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "anonymous": false,
                        "eventSelector": "69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de2",
                        "id": 11,
                        "name": "Transfer",
                        "nameLocation": "278:8:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 10,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 11,
                                    "src": "287:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 6,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "287:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 9,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 11,
                                    "src": "296:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 8,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "296:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "286:18:0"
                        },
                        "src": "272:33:0"
                    },
                    {
                        "body": {
                            "id": 24,
                            "nodeType": "Block",
                            "src": "353:48:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 19,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "370:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 20,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "374:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "370:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "39393939",
                                                "id": 21,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "382:10:0",
                                                "subdenomination": "ether",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_9999000000000000000000_by_1",
                                                    "typeString": "int_const 9999000000000000000000"
                                                },
                                                "value": "9999"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_9999000000000000000000_by_1",
                                                    "typeString": "int_const 9999000000000000000000"
                                                }
                                            ],
                                            "id": 18,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 543,
                                            "src": "364:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 22,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "364:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 23,
                                    "nodeType": "ExpressionStatement",
                                    "src": "364:29:0"
                                }
                            ]
                        },
                        "id": 25,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "42505f544f4b454e",
                                        "id": 14,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "333:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_32c42bb8abad8dddadd085f2838e3c56c17ba37b972285995a39190e1f1d3eb6",
                                            "typeString": "literal_string \"BP_TOKEN\""
                                        },
                                        "value": "BP_TOKEN"
                                    },
                                    {
                                        "hexValue": "42505344",
                                        "id": 15,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "345:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_ee8a7092aab614760f578ba8c3b29d7d2dd718a5e20d5e366e0b0f130bab85e4",
                                            "typeString": "literal_string \"BPSD\""
                                        },
                                        "value": "BPSD"
                                    }
                                ],
                                "id": 16,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 13,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "327:5:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 703,
                                    "src": "327:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "327:25:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 12,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "324:2:0"
                        },
                        "returnParameters": {
                            "id": 17,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "353:0:0"
                        },
                        "scope": 51,
                        "src": "313:88:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            313
                        ],
                        "body": {
                            "id": 49,
                            "nodeType": "Block",
                            "src": "493:102:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 38,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 27,
                                                "src": "519:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 39,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 29,
                                                "src": "523:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 35,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "504:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_MyToken1_$51_$",
                                                    "typeString": "type(contract super MyToken1)"
                                                }
                                            },
                                            "id": 37,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "510:8:0",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 313,
                                            "src": "504:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 40,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "504:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 41,
                                    "nodeType": "ExpressionStatement",
                                    "src": "504:25:0"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "id": 43,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 27,
                                                "src": "554:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 44,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 29,
                                                "src": "558:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 42,
                                            "name": "Transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                11,
                                                715
                                            ],
                                            "referencedDeclaration": 11,
                                            "src": "545:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 45,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "545:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46,
                                    "nodeType": "EmitStatement",
                                    "src": "540:24:0"
                                },
                                {
                                    "expression": {
                                        "hexValue": "74727565",
                                        "id": 47,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "583:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 34,
                                    "id": 48,
                                    "nodeType": "Return",
                                    "src": "576:11:0"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 50,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nameLocation": "418:8:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 31,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "469:8:0"
                        },
                        "parameters": {
                            "id": 30,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 27,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "435:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 50,
                                    "src": "427:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 26,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "427:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 29,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "447:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 50,
                                    "src": "439:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 28,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "439:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "426:27:0"
                        },
                        "returnParameters": {
                            "id": 34,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 33,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 50,
                                    "src": "487:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 32,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "487:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "486:6:0"
                        },
                        "scope": 51,
                        "src": "409:186:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 52,
                "src": "238:360:0",
                "usedErrors": [
                    63,
                    68,
                    73,
                    82,
                    87,
                    92
                ],
                "usedEvents": [
                    11,
                    715,
                    724
                ]
            }
        ],
        "src": "33:565:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "322200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "2746",
            "approve(address,uint256)": "24325",
            "balanceOf(address)": "2515",
            "decimals()": "241",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2300",
            "transfer(address,uint256)": "52230",
            "transferFrom(address,address,uint256)": "75523"
        }
    }
}